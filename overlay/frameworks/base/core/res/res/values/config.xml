<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2012, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <bool name="config_wifi_background_scan_support">true</bool>
    <bool name="config_wifi_batched_scan_supported">false</bool>
    <bool name="config_automatic_brightness_available">true</bool>
    <bool name="config_dreamsSupported">true</bool>
    <bool name="config_dreamsEnabledByDefault">false</bool>
    <bool name="config_useDevInputEventForAudioJack">true</bool>
    <bool name="config_hotswapCapable">true</bool>
    <bool name="skip_restoring_network_selection">true</bool>
    <bool name="config_cellBroadcastAppLinks">true</bool>

    <!-- The duration (in milliseconds) that the radio will scan for a signal
    when there's no network connection. If the scan doesn't timeout, use zero -->
    <integer name="config_radioScanningTimeout">9000</integer>

    <!-- Our modem doesn't support this query yet -->
    <string name="config_radio_access_family">GPRS|EDGE|UMTS|HSDPA|HSUPA|HSPA|LTE|HSPAP|GSM|TD_SCDMA|WCDMA|LTE_CA</string>

    <integer name="config_autoBrightnessBrighteningLightDebounce">400</integer>

    <!-- Configure mobile tcp buffer sizes in the form:
         rat-name:rmem_min,rmem_def,rmem_max,wmem_min,wmem_def,wmem_max
         If no value is found for the rat-name in use, the system default will be applied.
    -->
    <string-array name="config_mobile_tcp_buffers">
        <item>"lte:2097152,4194304,8388608,262144,524288,1048576"</item>
        <item>"umts:4094,87380,1220608,4096,16384,1220608"</item>
        <item>"hspa:4094,87380,1220608,4096,16384,1220608"</item>
        <item>"hsupa:4094,87380,1220608,4096,16384,1220608"</item>
        <item>"hsdpa:4094,87380,1220608,4096,16384,1220608"</item>
        <item>"hspap:4094,87380,1220608,4096,16384,1220608"</item>
        <item>"edge:4093,26280,35040,4096,16384,35040"</item>
        <item>"gprs:4092,8760,11680,4096,8760,11680"</item>
        <item>"evdo:4094,87380,524288,4096,16384,262144"</item>
    </string-array>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N  1 zones as follows:

         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1     array[N] <= LUX < infinity

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>		<!-- pitch black -->
        <item>5</item>
	<item>10</item>		<!-- dark indoor -->
	<item>15</item>
        <item>25</item>		<!-- twilight -->
        <item>50</item>		<!-- dim indoor -->
        <item>100</item>	<!-- home -->
        <item>200</item>
	<item>300</item>    	<!-- office -->
	<item>400</item>
        <item>500</item>	<!-- sunrise -->
	<item>750</item>
        <item>1000</item>	<!-- overcast -->
        <item>2000</item>
        <item>3000</item>
        <item>5000</item>
        <item>10000</item>	<!-- daylight -->
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>5</item>    <!-- 0-1 -->
        <item>8</item>    <!-- 1-5 -->
        <item>10</item>   <!-- 5-10 -->
        <item>12</item>   <!-- 10-15 -->
        <item>17</item>   <!-- 15-25 -->
        <item>29</item>   <!-- 25-50 -->
        <item>35</item>   <!-- 50-100 -->
        <item>47</item>   <!-- 100-200 -->
        <item>75</item>   <!-- 200-300 -->
	<item>95</item>	  <!-- 300-400 -->
        <item>114</item>  <!-- 400-500 -->
        <item>130</item>  <!-- 500-750 -->
        <item>152</item>  <!-- 750-1000 -->
        <item>175</item>  <!-- 1000-2000 -->
	<item>200</item>  <!-- 2000-3000 -->
	<item>215</item>  <!-- 3000-5000 -->
	<item>235</item>  <!-- 5000-10000 -->
	<item>255</item>  <!-- 10000+-->
    </integer-array>

    <!-- Array of output values for button backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessButtonBacklightValues">
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
    </integer-array>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">1</integer>

    <!-- Button illumination 
    <bool name="config_deviceHasVariableButtonBrightness">true</bool> -->

    <!-- MMS user agent string -->
    <string name="config_mms_user_agent" translatable="false">Android-Mms/2.0</string>

    <!-- MMS user agent prolfile url -->
    <string name="config_mms_user_agent_profile_url" translatable="false"
            >http://www.google.com/oha/rdf/ua-profile-kila.xml</string>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         USB interfaces.  If the device doesn't want to support tething over USB this should
         be empty.  An example would be "usb.*" -->
    <string-array translatable="false" name="config_tether_usb_regexs">
        <item>"usb\\d"</item>
        <item>"rndis\\d"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
         should be empty.  An example would be "softap.*" -->
    <string-array translatable="false" name="config_tether_wifi_regexs">
        <item>"wlan0"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
         should be empty. -->
    <string-array translatable="false" name="config_tether_bluetooth_regexs">
        <item>"bnep\\d"</item>
        <item>"bt-pan"</item>
    </string-array>

    <!-- Array of ConnectivityManager.TYPE_xxxx values allowable for tethering -->
    <!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or
             <!== [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
    <integer-array translatable="false" name="config_tether_upstream_types">
        <item>0</item>
        <item>1</item>
        <item>5</item>
        <item>7</item>
    </integer-array>

    <!-- This string array should be overridden by the device to present a list of network
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[Connection name],[ConnectivityManager.TYPE_xxxx],
         [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
    <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
         before automatically restore the default connection.  Set -1 if the connection
         does not require auto-restore. -->
    <!-- the 6th element indicates boot-time dependency-met value. -->
    <string-array translatable="false" name="networkAttributes">
        <item>"wifi,1,1,1,-1,true"</item>
        <item>"mobile,0,0,0,-1,true"</item>
        <item>"mobile_mms,2,0,2,60000,true"</item>
        <item>"mobile_supl,3,0,2,60000,true"</item>
        <item>"mobile_dun,4,0,2,60000,true"</item>
        <item>"mobile_hipri,5,0,3,60000,true"</item>
        <item>"mobile_fota,10,0,2,60000,true"</item>
        <item>"mobile_ims,11,0,2,60000,true"</item>
        <item>"mobile_cbs,12,0,2,60000,true"</item>
        <item>"mobile_ia,14,0,2,-1,true"</item>
        <item>"bluetooth,7,7,2,-1,true"</item>
        <item>"ethernet,9,9,9,-1,true"</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of radio
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
                      [# simultaneous connection types]"  -->
    <string-array translatable="false" name="radioAttributes">
        <item>"1,1"</item>
        <item>"0,1"</item>
        <item>"7,1"</item>
    </string-array>

    <!-- Maximum number of supported users -->
    <integer name="config_multiuserMaximumUsers">4</integer>

    <!-- Whether Multiuser UI should be shown -->
    <bool name="config_enableMultiUserUI">true</bool>

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveNotificationLed">true</bool>
    
    <!-- Does the notification LED support multiple colors?
         Used to decide if the user can change the colors
    <bool name="config_multiColorNotificationLed">true</bool>  -->

    <!-- Is the battery LED intrusive? Used to decide if there should be a disable option
    <bool name="config_intrusiveBatteryLed">true</bool> -->

    <!-- Make things go fast -->
    <bool name="config_ui_enableFadingMarquee">false</bool>

    <!-- Hardware keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7.
    <integer name="config_deviceHardwareKeys">83</integer> -->

    <!-- Hardware keys present on the device with the ability to wake, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7.
    <integer name="config_deviceHardwareWakeKeys">64</integer> -->

    <!-- Control the behavior when the user long presses the home button
             0 - Nothing
             1 - Menu key
             2 - Recent apps view in SystemUI
             3 - Launch assist intent
             4 - Voice Search
             5 - In-app Search
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
     -->
    <integer name="config_longPressOnHomeBehavior">3</integer>

    <!-- Control the behavior when the user long presses the app switch button
             0 - Nothing
             1 - Menu key
             2 - Recent apps view in SystemUI
             3 - Launch assist intent
             4 - Voice Search
             5 - In-app Search
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
     
     <integer name="config_longPressOnAppSwitchBehavior">1</integer>-->

    <!-- Disable lockscreen rotation by default -->
    <bool name="config_enableLockScreenRotation">false</bool>

    <!-- If true, the screen can be rotated via the accelerometer in all 4
         rotations as the default behavior. -->
    <bool name="config_allowAllRotations">true</bool>

    <!-- Indicate whether closing the lid causes the device to go to sleep and opening
         it causes the device to wake up.
         The default is false. -->
    <bool name="config_lidControlsSleep">true</bool>

    <!-- enable doze powersaving mode -->
    <bool name="config_enableAutoPowerModes">true</bool>
    
    <!-- Support in Surfaceflinger for blur layers.
         NOTE: This requires additional hardware-specific code.
    <bool name="config_uiBlurEnabled">true</bool> -->

    <!-- Enable Night display, which requires HWC 2.0. -->
    <bool name="config_nightDisplayAvailable">true</bool>

    <!-- Default mode to control how Night display is automatically activated.
      One of the following values (see NightDisplayController.java):
          0 - AUTO_MODE_DISABLED
          1 - AUTO_MODE_CUSTOM
          2 - AUTO_MODE_TWILIGHT -->
    <integer name="config_defaultNightDisplayAutoMode">0</integer>
 
    <!-- Default time when Night display is automatically activated.
      Represented as milliseconds from midnight (e.g. 79200000 == 10pm). -->
    <integer name="config_defaultNightDisplayCustomStartTime">79200000</integer>
 
    <!-- Default time when Night display is automatically deactivated.
      Represented as milliseconds from midnight (e.g. 21600000 == 6am). -->
    <integer name="config_defaultNightDisplayCustomEndTime">21600000</integer>

    <!-- Operating volatage for bluetooth controller. 0 by default-->
    <integer translatable="false" name="config_bluetooth_operating_voltage_mv">3700</integer>

    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
           remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
    <bool name="config_enableWifiDisplay">true</bool>
    
    <!-- True if Unprocessed audio source supports the required frequency range and level -->
    <bool name="config_supportAudioSourceUnprocessed">true</bool>
    
    <!-- Boolean indicating whether the wifi chipset has dual frequency band support -->
    <bool translatable="false" name="config_wifi_dual_band_support">true</bool>

    <!-- Configure wifi tcp buffersizes in the form:
         rmem_min,rmem_def,rmem_max,wmem_min,wmem_def,wmem_max -->
    <string name="config_wifi_tcp_buffers" translatable="false">524288,2097152,4194304,262144,524288,1048576</string>

    <!-- Disable wakeup during Netwoek Sampling -->
    <bool name="config_networkSamplingWakesDevice">false</bool>

    <!-- Package name(s) containing location provider support.
         These packages can contain services implementing location providers,
         such as the Geocode Provider, Network Location Provider, and
         Fused Location Provider. They will each be searched for
         service components implementing these providers.
         It is strongly recommended that the packages explicitly named
         below are on the system image, so that they will not map to
         a 3rd party application.
         The location framework also has support for installation
         of new location providers at run-time. The new package does not
         have to be explicitly listed here, however it must have a signature
         that matches the signature of at least one package on this list.
         -->
    <string-array name="config_locationProviderPackageNames" translatable="false">
        <item>com.google.android.gms</item>
        <item>com.google.android.location</item>
        <!-- The standard AOSP fused location provider -->
        <item>com.android.location.fused</item>
    </string-array>

    <!-- Values for GPS configuration -->
    <string-array translatable="false" name="config_gpsParameters">
        <item>XTRA_SERVER_1=http://xtrapath1.izatcloud.net/xtra3grc.bin</item>
        <item>XTRA_SERVER_2=http://xtrapath2.izatcloud.net/xtra3grc.bin</item>
        <item>XTRA_SERVER_3=http://xtrapath3.izatcloud.net/xtra3grc.bin</item>
        <item>NTP_SERVER=north-america.pool.ntp.org</item>
        <item>SUPL_VER=0x20000</item>
        <item>SUPL_ES=0</item>
        <item>CAPABILITIES=0x31</item>
        <item>SUPL_HOST=supl.google.com</item>
        <item>SUPL_PORT=7275</item>
        <item>SUPL_MODE=1</item>
        <item>LPP_PROFILE=0</item>
        <item>A_GLONASS_POS_PROTOCOL_SELECT=0</item>
    </string-array>

</resources>
